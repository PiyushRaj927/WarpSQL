name: Smoke Test Docker Image

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
on:
  pull_request:
  push:
    branches:
      - main

env:
  ORG: timescaledev
  TS_VERSION: main
  PLATFORM: linux/amd64

jobs:
  smoketest:
    name: PG${{ matrix.pg }}-${{ matrix.type }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pg: [15]
        # type: ['normal', 'bitnami']
        type: ['bitnami']
    permissions:
      pull-requests: write
    steps:
      - name: Check out the source
        uses: actions/checkout@v3

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2

      - name: Build Docker Image for TimescaleDB
        run: |
          if [ ${{ matrix.type }} == bitnami ]
          then
            cd bitnami
          fi
          make build-docker-cache image PG_VER=pg${{ matrix.pg }} TAG_VERSION=smoketest-image BETA=1

      - name: Install psql
        run: sudo apt install postgresql-client

      - name: Run the smoke test
        run: |
          set -eu
          export PGHOST=localhost
          export PGUSER=postgres
          export PGPASSWORD=test1234
          docker container stop smoketest-container || true
          docker container rm smoketest-container || true
          docker run -d -p 5432:5432 -e POSTGRES_PASSWORD=${PGPASSWORD} --name smoketest-container smoketest-image
          for _ in {1..120}
          do
            if [ -z "$(docker container ls -q --filter name=smoketest-container)" ]
            then
              echo "Smoketest container is not running"
              exit 1
            fi
            if psql -c "select 1"
            then
            bash ./test/smoke_test/smoke_test.sh
              break
            fi
            sleep 1
          done
          if ! psql -c "select 1"
          then
            echo "Cannot connect to PostgreSQL"
            exit 1
          fi

      - name: Show the logs
        if: always()
        run: |
          docker logs smoketest-container
      - name: comment the image size
        uses: actions/github-script@v6.4.1
        with:
          script: |
            async function captureExecOutput(command,arguments){
            let myOutput = '';
            let myError = '';

            const options = {};
            options.listeners = {
              stdout: (data) => {
                myOutput += data.toString();
              },
              stderr: (data) => {
                myError += data.toString();
              }
            };
            await exec.exec(command,arguments,options);
            console.log(myOutput);
            return myOutput;
            }
            let commitSHA = context.sha;
            let imageSize = await captureExecOutput('docker', ['image', 'list', '--format="{{.Size}}"','smoketest-image']);
            let imageLayers = await captureExecOutput('docker', ['image', 'history' ,'-H'  ,'--format="table {{.CreatedBy}} \\t\\t {{.Size}}"' ,'smoketest-image']);
            let diveAnalysis = await captureExecOutput('docker', ['run', '--rm','-e', 'CI=true','-v /var/run/docker.sock:/var/run/docker.sock', 'wagoodman/dive:latest','smoketest-image']);
            console.log(commitSHA);
            console.log(imageSize);
            console.log(imageLayers);
            console.log(diveAnalysis);
            let githubMessage = `${{ matrix.type }} image analysis on ${commitSHA}
            Total Size:  ${imageSize}
            layers
            ${imageLayers}

            ----------------------------------------------------------
            ${diveAnalysis}
              `;
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: githubMessage
              });
# TODO: fix table output
# TODO: add dive config file